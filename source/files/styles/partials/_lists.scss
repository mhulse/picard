ul, ol, dl { padding: 0; }

ul, ol { list-style: none; }

dt {
	@include rex_baseline($rex_base-font-size + 2, .75);
	font-weight: bold;
	margin: 0;
	padding: #{rex_baseline($rex_base-font-size + 2, .25) / 2}em 0;
}

dd { margin-left: 0; }

// http://www.456bereastreet.com/archive/201105/styling_ordered_list_numbers/
// http://css-tricks.com/numbering-in-style/
.li1,
.li2,
.body ol,
.body ul {
	
	counter-reset: li;
	
	> li {
		
		&::before {
			font-family: $serif;
			font-weight: bold;
			color: darken($bling, 10%);
			margin: {
				top: #{rex_relative($base_margin)}rem;
				bottom: #{rex_relative($base_margin / 4)}rem;
			}
			display: block;
			content: counter(li, lower-roman);
			counter-increment: li;
		}
		
		&:first-child::before { margin-top: 0; }
		
	}
	
}

.li2,
.body ul {
	
	> li {
		
		&::before {
			content: counter(li, square);
			margin-bottom: #{rex_relative($base_margin / 6)}rem;
		}
		
	}
	
}

%arrow {
	font-family: FontAwesome;
	line-height: 0;
	position: relative;
	font-style: normal;
	font-weight: normal;
	text-decoration: inherit;
	//display: inline-block;
}

.pager {
	
	color: $gray8;
	width: auto;
	margin: {
		top: #{rex_relative($base_margin)}rem;
		bottom: #{rex_relative($base_margin)}rem;
	}
	padding: 0;
	display: inline-block;
	
	> {
		
		li {
			
			font-size: #{rex_relative($rex_base-font-size - 2)}rem;
			line-height: 1;
			margin: 0;
			padding: 0;
			display: inline-block;
			
			a,
			span {
				text-transform: uppercase;
				letter-spacing: .05em;
				white-space: nowrap;
				background: $graye;
				width: 100%;
				height: 100%;
				padding: 1em 1.5em;
				display: block;
			}
			
			.pager-current {
				color: $raven;
				font-weight: bold;
				background: $grayc;
			}
			
			&:first-child {
				
				a,
				span { border-radius: #{rex_relative($base_radii)}rem 0 0 #{rex_relative($base_radii)}rem; }
				
				a::before {
					@extend %arrow;
					content: "\f177\00a0";
				}
				
			}
			
			&:last-child {
				
				a,
				span { border-radius: 0 #{rex_relative($base_radii)}rem #{rex_relative($base_radii)}rem 0; }
				
				a::after {
					@extend %arrow;
					content: "\00a0\f178";
				}
				
			}
			
			// &:not(:first-child):not(:last-child) {
				
			// 	@media (max-width: #{rex_relative($base_breakpoint-max)}rem) {
					
			// 		& { display: none; }
					
			// 	}
				
			// }
			
		}
		
	}
	
	a {
		
		&,
		&:visited { color: $gray3; }
		&:visited:hover,
		&:focus,
		&:focus:hover,
		&:hover {
			color: $graye;
			text-decoration: none;
			background: $gray3;
		}
		
		&:focus,
		&:active { outline: none; }
		
		-webkit-transition: background 200ms linear, color 750ms linear;
				transition: background 200ms linear, color 750ms linear;
		
	}
	
	// https://github.com/mhulse/picard/issues/133#issuecomment-31626386
	.fa {
		line-height: 0;
		position: relative;
	}
	
}

ul.meta {
	
	// h-offset, v-offset, blur, spread, color
	box-shadow: 0 #{rex_relative(3)}rem rgba($raven, .1);
	
	> li {
		
		border-bottom: #{rex_relative(1)}rem solid $grayb;
		margin: 0;
		padding: #{rex_baseline($rex_base-font-size, .875) / 2}em;
		background: lighten($graye, 5%);
		box-shadow: inset 0 0 #{rex_relative(10)}rem 0 rgba($raven, .2);
		
		&:last-child { border-bottom: 0; }
		
	}
	
}

.cloud {
	
	> li {
		display: inline-block;
		text-transform: lowercase;
		margin: .1rem .25rem;
		// http://stackoverflow.com/a/16373316/922323
		white-space: pre-wrap;
		word-wrap: break-word;
		overflow-wrap: break-word;
		word-break: break-all;
	}
	
	a {
		
		line-height: 1;
		display: block;
		
		&,
		&:visited { color: $dusk; }
		&:visited:hover,
		&:focus,
		&:focus:hover,
		&:hover,
		&:active {
			color: $smurf;
			text-decoration: none;
		}
		
	}
	
}

.archive {
	
	.archive-year,
	.archive-month,
	.archive-day {
		color: $gray5;
		border: #{rex_relative(1)}rem solid $grayc;
		border-top-width: #{rex_relative(5)}rem;
		background: $milk;
		margin: #{rex_relative($base_margin + 1)}rem #{rex_relative(2)}rem #{rex_relative($base_margin)}rem;
		padding: #{rex_relative($base_padding)}rem;
		display: inline-block;
		white-space: nowrap;
		border-radius: 0 0 #{rex_relative(2)}rem #{rex_relative(3)}rem;
		box-shadow: 0 #{rex_relative(3)}rem #{rex_relative(1)}rem rgba($raven, .05)
	}
	
	.archive-year {
		color: $gray3;
		border-color: $gray6;
	}
	
	> :nth-of-type(-n+3) { margin-top: 0; } // Remove top margin from first three elements (dt).
	
	.archive-item {
		
		border: {
			width: #{rex_relative(1)}rem 0;
			style: solid;
			color: $grayd;
		}
		margin: 0 0 -#{rex_relative(1)}rem;
		padding: #{rex_relative($base_padding * 2)}rem;
		
		&:last-child { border-bottom: 0; }
		
		i { color: $juice; }
		
	}
	
}
